<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashv2rayc.github.io/news/article-80320.htm" />
    <!-- Meta Tags -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0">
    <title>Golang redis(六)redigo 发布订阅模式</title>
        <meta name="description" content="发布订阅 使用Send，Flush和Receive方法实现Pub / Sub c.Send("SUBSCRIBE", "example") c.Flush() for {     reply, err" />
        <link rel="icon" href="/assets/website/img/clashv2rayc/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="ClashV2rayC免费订阅地址中文网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashv2rayc.github.io/news/article-80320.htm" />
    <meta property="og:site_name" content="ClashV2rayC免费订阅地址中文网" />
    <meta property="og:title" content="Golang redis(六)redigo 发布订阅模式" />
    <meta property="og:image" content="https://clashv2rayc.github.io/uploads/20250129/04f69ee906c661be0ce78159130e8c46.webp" />
        <meta property="og:release_date" content="2025-03-24T08:20:43" />
    <meta property="og:updated_time" content="2025-03-24T08:20:43" />
        <meta property="og:description" content="发布订阅 使用Send，Flush和Receive方法实现Pub / Sub c.Send("SUBSCRIBE", "example") c.Flush() for {     reply, err" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Golang redis(六)redigo 发布订阅模式">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <link rel="preconnect" href="https://fonts.googleapis.com/">
    <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin="">

    <!-- Stylesheets -->
    <link href="/assets/website/css/clashv2rayc/main.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-G2SVYDRGP7"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-G2SVYDRGP7');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div class="page-wrapper">
                <!-- Preloader -->
        <div id="preloader">
            <div class="preloader-inner">
                <div class="spinner"></div>
                <div class="loading-text">
                    <span data-preloader-text="C" class="characters">C</span>
                    <span data-preloader-text="L" class="characters">L</span>
                    <span data-preloader-text="A" class="characters">A</span>
                    <span data-preloader-text="S" class="characters">S</span>
                    <span data-preloader-text="H" class="characters">H</span>
                    <span data-preloader-text="V" class="characters">V</span>
                    <span data-preloader-text="2" class="characters">2</span>
                    <span data-preloader-text="R" class="characters">R</span>
                    <span data-preloader-text="A" class="characters">A</span>
                    <span data-preloader-text="Y" class="characters">Y</span>
                    <span data-preloader-text="C" class="characters">C</span>
                </div>
            </div>
        </div>
        <!-- Main Header -->
        <header class="main-header two">
            <!-- Header Lower -->
            <div class="header-lower">
                <div class="container">
                    <div class="inner-container d-flex justify-content-between align-items-center">
                        <div class="logo-box">
                            <!-- Logo -->
                            <div class="logo">
                                <a class="navbar-brand xcblog-blog-logo" href="/">
                                                                        <span>Clash V2rayC</span>
                                                                    </a>
                            </div>
                        </div>
                        <div class="nav-outer d-flex align-items-center">
                            <!-- Main Menu -->
                            <nav class="main-menu d-none d-lg-block">
                                <div class="navbar-collapse collapse clearfix">
                                    <ul class="navigation clearfix">
                                                                                <li><a href="/">首页</a></li>
                                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                <li><a href="/client.htm">客户端</a></li>
                                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                            </ul>
                                </div>
                            </nav>
                            <!-- Main Menu End-->

                        </div>
                    </div>
                </div>
            </div>
            <!-- End Header Lower -->
        </header>
        <!-- End Main Header -->
        <!-- End Main Header -->
        <!-- Page Header Section -->
        <div class="page_header">
            <div class="page_header_content">
                <div class="container">
                    <h1 class="heading">Golang redis(六)redigo 发布订阅模式</h1>
                    <ul class="breadcrumb">
                        <li><a href="/">首页</a></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li class="active">正文</li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- Page Header Section -->
        <!-- About Section -->
        <section class="about-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-tomorrow-night-eighties"> <h4> <a id="_0" rel="nofollow"></a>发布订阅</h4> <p>使用Send，Flush和Receive方法实现Pub / Sub</p> <pre><code>c.Send("SUBSCRIBE", "example") c.Flush() for {     reply, err := c.Receive()     if err != nil {         return err     }     // process pushed message } </code></pre> <p>PubSubConn封装Conn以实现订阅者提供简便方法。Subscribe，PSubscribe，Unsubscribe和PUnsubscribe方法发送和刷新订阅。receive方法将推送的消息转换对应的类型</p> <pre><code>psc := redis.PubSubConn{Conn: c} psc.Subscribe("example") for {     switch v := psc.Receive().(type) {     case redis.Message:         fmt.Printf("%s: message: %s\n", v.Channel, v.Data)     case redis.Subscription:         fmt.Printf("%s: %s %d\n", v.Channel, v.Kind, v.Count)     case error:         return v     } } </code></pre> <h4> <a id="PubSubConn_37" rel="nofollow"></a>PubSubConn</h4> <p>定义</p> <pre><code>type PubSubConn struct {     Conn Conn } </code></pre> <p>提供的方法：</p> <p>1.Close 关闭连接<br /><code>func (c PubSubConn) Close() error</code></p> <p>2.PSubscribe PSubscribe发布<br /><code>func (c PubSubConn) PSubscribe(channel ...interface{}) error</code></p> <p>3.PUnsubscribe 取消发布， 如果没有给定， 则取消所有<br /><code>func (c PubSubConn) PUnsubscribe(channel ...interface{}) error</code></p> <p>4.Ping 指定的数据向服务器发送PING 调用此方法时，连接必须至少订阅一个通道或模式<br /><code>func (c PubSubConn) Ping(data string) error</code></p> <p>5.Receive 获取消息<br /><code>func (c PubSubConn) Receive() interface{}</code></p> <p>6.ReceiveWithTimeout 带有超时时间的获取消息函数<br /><code>func (c PubSubConn) ReceiveWithTimeout(timeout time.Duration) interface{}</code></p> <p>7.Subscribe 订阅<br /><code>func (c PubSubConn) Subscribe(channel ...interface{}) error</code></p> <p>8.Unsubscribe 取消订阅<br /><code>func (c PubSubConn) Unsubscribe(channel ...interface{}) error</code></p> <p>示例程序：</p> <pre><code>package main  import (    "context"    "fmt"    "time"     "github.com/gomodule/redigo/redis" )  // listenPubSubChannels listens for messages on Redis pubsub channels. The // onStart function is called after the channels are subscribed. The onMessage // function is called for each message. func listenPubSubChannels(ctx context.Context, redisServerAddr string,    onStart func() error,    onMessage func(channel string, data []byte) error,    channels ...string) error {    // A ping is set to the server with this period to test for the health of    // the connection and server.    const healthCheckPeriod = time.Minute     c, err := redis.Dial("tcp", redisServerAddr,       // Read timeout on server should be greater than ping period.       redis.DialReadTimeout(healthCheckPeriod+10*time.Second),       redis.DialWriteTimeout(10*time.Second))    if err != nil {       return err    }    defer c.Close()     psc := redis.PubSubConn{Conn: c}     if err := psc.Subscribe(redis.Args{}.AddFlat(channels)...); err != nil {       return err    }     done := make(chan error, 1)     // Start a goroutine to receive notifications from the server.    go func() {       for {          switch n := psc.Receive().(type) {          case error:             done &lt;- n             return          case redis.Message:             if err := onMessage(n.Channel, n.Data); err != nil {                done &lt;- err                return             }          case redis.Subscription:             switch n.Count {             case len(channels):                // Notify application when all channels are subscribed.                if err := onStart(); err != nil {                   done &lt;- err                   return                }             case 0:                // Return from the goroutine when all channels are unsubscribed.                done &lt;- nil                return             }          }       }    }()     ticker := time.NewTicker(healthCheckPeriod)    defer ticker.Stop() loop:    for err == nil {       select {       case &lt;-ticker.C:          // Send ping to test health of connection and server. If          // corresponding pong is not received, then receive on the          // connection will timeout and the receive goroutine will exit.          if err = psc.Ping(""); err != nil {             break loop          }       case &lt;-ctx.Done():          break loop       case err := &lt;-done:          // Return error from the receive goroutine.          return err       }    }     // Signal the receiving goroutine to exit by unsubscribing from all channels.    psc.Unsubscribe()     // Wait for goroutine to complete.    return &lt;-done }  func publish() {    c, err := redis.Dial("tcp", "127.0.0.1:6379")    if err != nil {       fmt.Println(err)       return    }    defer c.Close()     c.Do("PUBLISH", "c1", "hello")    c.Do("PUBLISH", "c2", "world")    c.Do("PUBLISH", "c1", "goodbye") }  // This example shows how receive pubsub notifications with cancelation and // health checks. func main() {    redisServerAddr := "127.0.0.1:6379"     ctx, cancel := context.WithCancel(context.Background())     err := listenPubSubChannels(ctx,       redisServerAddr,       func() error {          // The start callback is a good place to backfill missed          // notifications. For the purpose of this example, a goroutine is          // started to send notifications.          go publish()          return nil       },       func(channel string, message []byte) error {          fmt.Printf("channel: %s, message: %s\n", channel, message)           // For the purpose of this example, cancel the listener's context          // after receiving last message sent by publish().          if string(message) == "goodbye" {             cancel()          }          return nil       },       "c1", "c2")     if err != nil {       fmt.Println(err)       return    }  } </code></pre> <p>输出：</p> <pre><code>channel: c1, message: hello channel: c2, message: world channel: c1, message: goodbye </code></pre> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-79656.htm">猫三联三针一共多少钱一针啊（猫三联三针有什么区别）</a></p>
                                        <p>下一个：<a href="/news/article-80321.htm">狗粮品牌哪个好（国产十大放心狗粮品牌排行榜）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-65150.htm" title="C语言中常用的字符数组函数">C语言中常用的字符数组函数</a></li>
                        <li class="py-2"><a href="/news/article-70899.htm" title="配置简单RestTemplate">配置简单RestTemplate</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-20-free-node-subscribe-links.htm" title="3月20日最新V2rayC订阅 | 19.9M/S|2025年V2ray/Clash/Shadowrocket/SSR免费节点地址链接分享">3月20日最新V2rayC订阅 | 19.9M/S|2025年V2ray/Clash/Shadowrocket/SSR免费节点地址链接分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-11-free-ssr-subscribe.htm" title="2月11日最新V2rayC订阅 | 18.8M/S|2025年SSR/Clash/Shadowrocket/V2ray免费节点地址链接分享">2月11日最新V2rayC订阅 | 18.8M/S|2025年SSR/Clash/Shadowrocket/V2ray免费节点地址链接分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-17-clash-v2ray-ss-ssr.htm" title="3月17日最新V2rayC订阅 | 20.9M/S|2025年Clash/V2ray/Shadowrocket/SSR免费节点地址链接分享">3月17日最新V2rayC订阅 | 20.9M/S|2025年Clash/V2ray/Shadowrocket/SSR免费节点地址链接分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-10-free-node-subscribe-links.htm" title="3月10日最新V2rayC订阅 | 18.6M/S|2025年Shadowrocket/V2ray/SSR/Clash免费节点地址链接分享">3月10日最新V2rayC订阅 | 18.6M/S|2025年Shadowrocket/V2ray/SSR/Clash免费节点地址链接分享</a></li>
                        <li class="py-2"><a href="/news/article-50433.htm" title="长沙领养宠物猫在哪里领（长沙领养宠物猫在哪里领养）">长沙领养宠物猫在哪里领（长沙领养宠物猫在哪里领养）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-29-free-ssr-subscribe.htm" title="1月29日最新ClashX订阅 | 18.9M/S|2025年V2ray/Shadowrocket/Clash/SSR免费节点地址链接分享">1月29日最新ClashX订阅 | 18.9M/S|2025年V2ray/Shadowrocket/Clash/SSR免费节点地址链接分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-20-free-subscribe-node.htm" title="2月20日最新V2rayC订阅 | 21.9M/S|2025年SSR/Clash/V2ray/Shadowrocket免费节点地址链接分享">2月20日最新V2rayC订阅 | 21.9M/S|2025年SSR/Clash/V2ray/Shadowrocket免费节点地址链接分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-1-free-ssr-node.htm" title="3月1日最新V2rayC订阅 | 21.6M/S|2025年V2ray/SSR/Shadowrocket/Clash免费节点地址链接分享">3月1日最新V2rayC订阅 | 21.6M/S|2025年V2ray/SSR/Shadowrocket/Clash免费节点地址链接分享</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">75</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">9</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
        <!-- End About Section -->
                <!-- Main Footer -->
        <footer class="main-footer">
            <div class="container">
                <!-- Footer Bottom -->
                <div class="footer-bottom">
                    <div class="d-flex justify-content-between align-items-center flex-wrap">
                        <div class="left-box">
                            <div class="copyright">
                                <p>
                                    <a href="/">首页</a> |
                                    <a href="/free-node/">免费节点</a> |
                                    <a href="/news/">新闻资讯</a> |
                                    <a href="/about-us.htm">关于我们</a> |
                                    <a href="/disclaimer.htm">免责申明</a> |
                                    <a href="/privacy.htm">隐私申明</a> |
                                    <a href="/sitemap.xml">网站地图</a>
                                </p>
                                <p>
                                    <a href="/">ClashV2rayC免费订阅地址中文网</a> 版权所有 Powered by WordPress
                                </p>
                            </div>
                        </div>
                        <div class="right-box d-flex">
                            <!-- Social Box -->
                            <ul class="social-box">
                                <li><a href="#" class="fa fa-facebook-f"></a></li>
                                <li><a href="#" class="fa fa-instagram"></a></li>
                                <li><a href="#" class="fa fa-twitter"></a></li>
                                <li><a href="#" class="fa fa-linkedin"></a></li>
                            </ul>

                        </div>
                    </div>
                </div>
            </div>
        </footer>
        <!-- ScrollToTop Start -->
        <div class="progress-wrap active-progress">
            <svg class="progress-circle svg-content" width="100%" height="100%" viewbox="-1 -1 102 102">
                <path d="M50,1 a49,49 0 0,1 0,98 a49,49 0 0,1 0,-98" style="transition: stroke-dashoffset 10ms linear 0s; stroke-dasharray: 307.919px, 307.919px; stroke-dashoffset: 228.265px;"></path>
            </svg>
        </div>
        <!-- ScrollToTop End -->
        <script src="/assets/website/js/frontend/clashv2rayc/jquery.js"></script>
        <script src="/assets/website/js/frontend/clashv2rayc/popper.min.js"></script>
        <script src="/assets/website/js/frontend/clashv2rayc/bootstrap.min.js"></script>
        <script src="/assets/website/js/frontend/clashv2rayc/ma5-menu.min.js"></script>
        <script src="/assets/website/js/frontend/clashv2rayc/magnific-popup.min.js"></script>
        <script src="/assets/website/js/frontend/clashv2rayc/appear.js"></script>
        <script src="/assets/website/js/frontend/clashv2rayc/tilt.jquery.min.js"></script>
        <script src="/assets/website/js/frontend/clashv2rayc/owl.js"></script>
        <script src="/assets/website/js/frontend/clashv2rayc/wow.js"></script>
        <script src="/assets/website/js/frontend/clashv2rayc/odometer.js"></script>
        <script src="/assets/website/js/frontend/clashv2rayc/jquery-ui.js"></script>
        <script src="/assets/website/js/frontend/clashv2rayc/script.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
        <script src="/assets/website/js/frontend/G.js"></script>
    </div>
    <!--End pagewrapper-->
</body>

</html>