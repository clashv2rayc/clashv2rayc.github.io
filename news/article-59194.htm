<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashv2rayc.github.io/news/article-59194.htm" />
    <!-- Meta Tags -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0">
    <title>Springboot整合Spring Retry实现重试机制</title>
        <meta name="description" content="在项目开发过程中，经常会有这样的情况：第一次执行一个操作不成功，考虑到可能是网络原因造成，就多执行几次操作，直到得到想要的结果为止，这就是重试机制。 Springboot可以通过整合Spring Re" />
        <link rel="icon" href="/assets/website/img/clashv2rayc/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="ClashV2rayC免费订阅地址中文网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashv2rayc.github.io/news/article-59194.htm" />
    <meta property="og:site_name" content="ClashV2rayC免费订阅地址中文网" />
    <meta property="og:title" content="Springboot整合Spring Retry实现重试机制" />
    <meta property="og:image" content="https://clashv2rayc.github.io/uploads/20250129/04f69ee906c661be0ce78159130e8c46.webp" />
        <meta property="og:release_date" content="2025-02-19T06:36:23" />
    <meta property="og:updated_time" content="2025-02-19T06:36:23" />
        <meta property="og:description" content="在项目开发过程中，经常会有这样的情况：第一次执行一个操作不成功，考虑到可能是网络原因造成，就多执行几次操作，直到得到想要的结果为止，这就是重试机制。 Springboot可以通过整合Spring Re" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Springboot整合Spring Retry实现重试机制">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <link rel="preconnect" href="https://fonts.googleapis.com/">
    <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin="">

    <!-- Stylesheets -->
    <link href="/assets/website/css/clashv2rayc/main.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-G2SVYDRGP7"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-G2SVYDRGP7');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div class="page-wrapper">
                <!-- Preloader -->
        <div id="preloader">
            <div class="preloader-inner">
                <div class="spinner"></div>
                <div class="loading-text">
                    <span data-preloader-text="C" class="characters">C</span>
                    <span data-preloader-text="L" class="characters">L</span>
                    <span data-preloader-text="A" class="characters">A</span>
                    <span data-preloader-text="S" class="characters">S</span>
                    <span data-preloader-text="H" class="characters">H</span>
                    <span data-preloader-text="V" class="characters">V</span>
                    <span data-preloader-text="2" class="characters">2</span>
                    <span data-preloader-text="R" class="characters">R</span>
                    <span data-preloader-text="A" class="characters">A</span>
                    <span data-preloader-text="Y" class="characters">Y</span>
                    <span data-preloader-text="C" class="characters">C</span>
                </div>
            </div>
        </div>
        <!-- Main Header -->
        <header class="main-header two">
            <!-- Header Lower -->
            <div class="header-lower">
                <div class="container">
                    <div class="inner-container d-flex justify-content-between align-items-center">
                        <div class="logo-box">
                            <!-- Logo -->
                            <div class="logo">
                                <a class="navbar-brand xcblog-blog-logo" href="/">
                                                                        <span>Clash V2rayC</span>
                                                                    </a>
                            </div>
                        </div>
                        <div class="nav-outer d-flex align-items-center">
                            <!-- Main Menu -->
                            <nav class="main-menu d-none d-lg-block">
                                <div class="navbar-collapse collapse clearfix">
                                    <ul class="navigation clearfix">
                                                                                <li><a href="/">首页</a></li>
                                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                <li><a href="/client.htm">客户端</a></li>
                                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                            </ul>
                                </div>
                            </nav>
                            <!-- Main Menu End-->

                        </div>
                    </div>
                </div>
            </div>
            <!-- End Header Lower -->
        </header>
        <!-- End Main Header -->
        <!-- End Main Header -->
        <!-- Page Header Section -->
        <div class="page_header">
            <div class="page_header_content">
                <div class="container">
                    <h1 class="heading">Springboot整合Spring Retry实现重试机制</h1>
                    <ul class="breadcrumb">
                        <li><a href="/">首页</a></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li class="active">正文</li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- Page Header Section -->
        <!-- About Section -->
        <section class="about-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>在项目开发过程中，经常会有这样的情况：第一次执行一个操作不成功，考虑到可能是网络原因造成，就多执行几次操作，直到得到想要的结果为止，这就是重试机制。<br /> Springboot可以通过整合Spring Retry框架实现重试。<br /> 下面讲一下在之前新建的ibatis项目基础上整合Spring Retry框架的步骤：<br /> 1、首先要在pom.xml配置中加入spring-retry的依赖：</p> <pre><code>&lt;dependency&gt;     &lt;groupId&gt;org.springframework.retry&lt;/groupId&gt;     &lt;artifactId&gt;spring-retry&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt;     &lt;groupId&gt;org.aspectj&lt;/groupId&gt;     &lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt; &lt;/dependency&gt;</code></pre> <p>2、在启动类中加入重试注解@EnableRetry。</p> <pre><code class="prism language-java"><span class="token keyword">import</span> org<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>MapperScan<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>SpringApplication<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>SpringBootApplication<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>retry<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>EnableRetry<span class="token punctuation">;</span><span class="token annotation punctuation">@EnableRetry</span><span class="token comment">//重试注解</span><span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span><span class="token string">"com.batis.mapper"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">BatisApplication</span><span class="token punctuation">{<!-- --></span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>BatisApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>3、新建重试接口RetryService和实现类RetryServiceImpl<br /> 重试接口：</p> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">interface</span><span class="token class-name">RetryService</span><span class="token punctuation">{<!-- --></span><span class="token keyword">void</span><span class="token function">retryTransferAccounts</span><span class="token punctuation">(</span><span class="token keyword">int</span> fromAccountId<span class="token punctuation">,</span><span class="token keyword">int</span> toAccountId<span class="token punctuation">,</span><span class="token keyword">float</span> money<span class="token punctuation">)</span><span class="token keyword">throws</span> Exception<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p>接口实现类：</p> <pre><code class="prism language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>batis<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>AccountMapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>batis<span class="token punctuation">.</span>model<span class="token punctuation">.</span>Account<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>batis<span class="token punctuation">.</span>service<span class="token punctuation">.</span>RetryService<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>retry<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Backoff<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>retry<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Recover<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>retry<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Retryable<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Transactional<span class="token punctuation">;</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">RetryServiceImpl</span><span class="token keyword">implements</span><span class="token class-name">RetryService</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span> AccountMapper accountMapper<span class="token punctuation">;</span><span class="token annotation punctuation">@Transactional</span><span class="token annotation punctuation">@Retryable</span><span class="token punctuation">(</span>value<span class="token operator">=</span> Exception<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> maxAttempts<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> backoff<span class="token operator">=</span><span class="token annotation punctuation">@Backoff</span><span class="token punctuation">(</span>delay<span class="token operator">=</span><span class="token number">3000</span><span class="token punctuation">,</span> multiplier<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> maxDelay<span class="token operator">=</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">retryTransferAccounts</span><span class="token punctuation">(</span><span class="token keyword">int</span> fromAccountId<span class="token punctuation">,</span><span class="token keyword">int</span> toAccountId<span class="token punctuation">,</span><span class="token keyword">float</span> money<span class="token punctuation">)</span><span class="token keyword">throws</span> Exception<span class="token punctuation">{<!-- --></span>         Account fromAccount<span class="token operator">=</span> accountMapper<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span>fromAccountId<span class="token punctuation">)</span><span class="token punctuation">;</span>         fromAccount<span class="token punctuation">.</span><span class="token function">setBalance</span><span class="token punctuation">(</span>fromAccount<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span> money<span class="token punctuation">)</span><span class="token punctuation">;</span>         accountMapper<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>fromAccount<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> a<span class="token operator">=</span><span class="token number">2</span><span class="token operator">/</span><span class="token number">0</span><span class="token punctuation">;</span>         Account toAccount<span class="token operator">=</span> accountMapper<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span>toAccountId<span class="token punctuation">)</span><span class="token punctuation">;</span>         toAccount<span class="token punctuation">.</span><span class="token function">setBalance</span><span class="token punctuation">(</span>toAccount<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span> money<span class="token punctuation">)</span><span class="token punctuation">;</span>         accountMapper<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>toAccount<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">throw</span><span class="token keyword">new</span><span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Recover</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">recover</span><span class="token punctuation">(</span>Exception e<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"回调方法执行！！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>@Retryable：标记当前方法会使用重试机制<br /> value：重试的触发机制，当遇到Exception异常的时候，会触发重试<br /> maxAttempts：重试次数（包括第一次调用）<br /> delay：重试的间隔时间<br /> multiplier：delay时间的间隔倍数<br /> maxDelay：重试次数之间的最大时间间隔，默认为0，如果小于delay的设置，则默认为30000L<br /> @Recover：标记方法为回调方法，传参与@Retryable的value值需一致<br /> 4、新建重试控制器类RetryController</p> <pre><code class="prism language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>batis<span class="token punctuation">.</span>service<span class="token punctuation">.</span>RetryService<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMethod<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RestController<span class="token punctuation">;</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/retry"</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">RetryController</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span> RetryService retryService<span class="token punctuation">;</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/transfer"</span><span class="token punctuation">,</span> method<span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">)</span><span class="token keyword">public</span> String<span class="token function">transferAccounts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">try</span><span class="token punctuation">{<!-- --></span>             retryService<span class="token punctuation">.</span><span class="token function">retryTransferAccounts</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token string">"ok"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token string">"no"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>5、启动ibatis项目进行测试，在浏览器地址栏输入：http://localhost:8080/retry/transfer<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220904/2ddc150389605c3b98ca008e0d8c33f1.jpg" alt="Springboot整合Spring Retry实现重试机制"><br /> 可以看到，转账操作一共执行了3次，最后执行了回调方法。<br /> 至此Springboot整合Spring Retry的步骤已经完成，测试也非常成功！<br /> 有可以改进的地方希望诸位同学不要吝惜笔墨，加以指正，万分感谢！</p> <p>参考链接：<br /> https://blog.csdn.net/qq_35387940/article/details/99676114</p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-59193.htm">Spring Security——【认证、授权、注销及权限控制】</a></p>
                                        <p>下一个：<a href="/news/article-59766.htm">spring boot2 (28)-cache缓存</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-48176.htm" title="宠物粮食代理需要多少钱呢知乎（宠物粮食代理需要多少钱呢知乎）">宠物粮食代理需要多少钱呢知乎（宠物粮食代理需要多少钱呢知乎）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-29-free-ssr-subscribe.htm" title="1月29日最新ClashX订阅 | 18.9M/S|2025年V2ray/Shadowrocket/Clash/SSR免费节点地址链接分享">1月29日最新ClashX订阅 | 18.9M/S|2025年V2ray/Shadowrocket/Clash/SSR免费节点地址链接分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-4-free-subscribe-node.htm" title="2月4日最新V2rayC订阅 | 20.3M/S|2025年Clash/V2ray/SSR/Shadowrocket免费节点地址链接分享">2月4日最新V2rayC订阅 | 20.3M/S|2025年Clash/V2ray/SSR/Shadowrocket免费节点地址链接分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-7-free-ssr-subscribe.htm" title="2月7日最新V2rayC订阅 | 21M/S|2025年V2ray/Shadowrocket/Clash/SSR免费节点地址链接分享">2月7日最新V2rayC订阅 | 21M/S|2025年V2ray/Shadowrocket/Clash/SSR免费节点地址链接分享</a></li>
                        <li class="py-2"><a href="/news/article-53058.htm" title="宠物医院手续办理流程（宠物医院审批流程）">宠物医院手续办理流程（宠物医院审批流程）</a></li>
                        <li class="py-2"><a href="/news/article-52520.htm" title="vue原生方法自定义右键菜单_vue.js_">vue原生方法自定义右键菜单_vue.js_</a></li>
                        <li class="py-2"><a href="/news/article-51493.htm" title="jpa mysql乐观锁_JPA @Lock(value = LockModeType.PESSIMISTIC_WRITE) 悲观锁防坑">jpa mysql乐观锁_JPA @Lock(value = LockModeType.PESSIMISTIC_WRITE) 悲观锁防坑</a></li>
                        <li class="py-2"><a href="/news/article-48872.htm" title="Windows 系统电脑如何下载安装并运行 Kubectl 查看云服务器 k8s 集群资源">Windows 系统电脑如何下载安装并运行 Kubectl 查看云服务器 k8s 集群资源</a></li>
                        <li class="py-2"><a href="/news/article-57482.htm" title="动物疫苗排名前十名有哪些 动物疫苗排名前十名有哪些品种">动物疫苗排名前十名有哪些 动物疫苗排名前十名有哪些品种</a></li>
                        <li class="py-2"><a href="/news/article-49906.htm" title="宠物粮食店铺图片大全（宠物粮食生意怎么样）">宠物粮食店铺图片大全（宠物粮食生意怎么样）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">66</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">9</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
        <!-- End About Section -->
                <!-- Main Footer -->
        <footer class="main-footer">
            <div class="container">
                <!-- Footer Bottom -->
                <div class="footer-bottom">
                    <div class="d-flex justify-content-between align-items-center flex-wrap">
                        <div class="left-box">
                            <div class="copyright">
                                <p>
                                    <a href="/">首页</a> |
                                    <a href="/free-node/">免费节点</a> |
                                    <a href="/news/">新闻资讯</a> |
                                    <a href="/about-us.htm">关于我们</a> |
                                    <a href="/disclaimer.htm">免责申明</a> |
                                    <a href="/privacy.htm">隐私申明</a> |
                                    <a href="/sitemap.xml">网站地图</a>
                                </p>
                                <p>
                                    <a href="/">ClashV2rayC免费订阅地址中文网</a> 版权所有 Powered by WordPress
                                </p>
                            </div>
                        </div>
                        <div class="right-box d-flex">
                            <!-- Social Box -->
                            <ul class="social-box">
                                <li><a href="#" class="fa fa-facebook-f"></a></li>
                                <li><a href="#" class="fa fa-instagram"></a></li>
                                <li><a href="#" class="fa fa-twitter"></a></li>
                                <li><a href="#" class="fa fa-linkedin"></a></li>
                            </ul>

                        </div>
                    </div>
                </div>
            </div>
        </footer>
        <!-- ScrollToTop Start -->
        <div class="progress-wrap active-progress">
            <svg class="progress-circle svg-content" width="100%" height="100%" viewbox="-1 -1 102 102">
                <path d="M50,1 a49,49 0 0,1 0,98 a49,49 0 0,1 0,-98" style="transition: stroke-dashoffset 10ms linear 0s; stroke-dasharray: 307.919px, 307.919px; stroke-dashoffset: 228.265px;"></path>
            </svg>
        </div>
        <!-- ScrollToTop End -->
        <script src="/assets/website/js/frontend/clashv2rayc/jquery.js"></script>
        <script src="/assets/website/js/frontend/clashv2rayc/popper.min.js"></script>
        <script src="/assets/website/js/frontend/clashv2rayc/bootstrap.min.js"></script>
        <script src="/assets/website/js/frontend/clashv2rayc/ma5-menu.min.js"></script>
        <script src="/assets/website/js/frontend/clashv2rayc/magnific-popup.min.js"></script>
        <script src="/assets/website/js/frontend/clashv2rayc/appear.js"></script>
        <script src="/assets/website/js/frontend/clashv2rayc/tilt.jquery.min.js"></script>
        <script src="/assets/website/js/frontend/clashv2rayc/owl.js"></script>
        <script src="/assets/website/js/frontend/clashv2rayc/wow.js"></script>
        <script src="/assets/website/js/frontend/clashv2rayc/odometer.js"></script>
        <script src="/assets/website/js/frontend/clashv2rayc/jquery-ui.js"></script>
        <script src="/assets/website/js/frontend/clashv2rayc/script.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
        <script src="/assets/website/js/frontend/G.js"></script>
    </div>
    <!--End pagewrapper-->
</body>

</html>